<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>AfterSchool Backend</title>
  <meta name="description" content="Backend application for the AfterSchool web app">
  <link rel="shortcut icon" href="https://bonafideboss.github.io/AfterSchoolFrontend/assets/images/favicon.ico"
    type="image/x-icon">

  <link rel="stylesheet" href="https://bonafideboss.github.io/AfterSchoolFrontend/assets/mdbootstrap.7.1.0/mdb.css">
  <link rel="stylesheet" href="https://bonafideboss.github.io/AfterSchoolFrontend/assets/fontawesome.6.5.1/css/all.css">
  <link rel="stylesheet" href="https://bonafideboss.github.io/AfterSchoolFrontend/assets/css/style.css">
  <link rel="stylesheet" href="atom-one-dark.min.css">
</head>

<body>
  <div class="container my-5">
    <h1 class="px-2 mb-3">
      <span class="satisfy-regular text-danger fw-bold">After</span><span class="satisfy-regular fw-bold">School</span>
      <span class="fw-bolder">Backend</span>
    </h1>
    <h5 class="text-truncate">Website:
      <a href="https://bonafideboss.github.io/AfterSchoolFrontend/" target="_blank">
        https://bonafideboss.github.io/AfterSchoolFrontend/
      </a>
    </h5>
    <h5 class="text-truncate">GitHub:
      <a href="https://github.com/BonaFideBOSS/AfterSchoolBackend" target="_blank">
        https://github.com/BonaFideBOSS/AfterSchoolBackend
      </a>
    </h5>
  </div>

  <div class="container my-5">
    <h2 class="fw-bolder mb-4">API Documentation</h2>

    <div class="mb-5">
      <h3 class="fw-bold mb-0">Lessons</h3>
      <hr>

      <div class="accordion mb-2" id="lesson-api-one">
        <div class="accordion-item border-success border">
          <h2 class="accordion-header">
            <button class="accordion-button bg-success bg-opacity-10" type="button" data-mdb-toggle="collapse"
              data-mdb-target="#api-one" data-mdb-collapse-init>
              <div class="row w-100 row-gap-2 align-items-center">
                <div class="col-5 col-md-2 col-lg-1">
                  <span class="w-100 fs-6 badge bg-opacity-75 text-bg-success">POST</span>
                </div>
                <div class="col-7 col-md-3 col-lg-2"><span class="fw-bold">/lessons/</span></div>
                <div class="col-12 col-md-7 col-lg-8"><span>Filter (optional) and retrieve lessons</span></div>
              </div>
            </button>
          </h2>
          <div id="api-one" class="accordion-collapse collapse" data-mdb-parent="#lesson-api-one">
            <div class="accordion-body">
              <pre class="code">async function getLessons() {
  const response = await fetch("API_URL/lessons", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({
      search: "",
      sortBy: "subject",
      sortOrder: "asc",
    }),
  });
  return await response.json();
}</pre>
            </div>
          </div>
        </div>
      </div>

      <div class="accordion mb-2" id="lesson-api-two">
        <div class="accordion-item border-warning border">
          <h2 class="accordion-header">
            <button class="accordion-button bg-warning bg-opacity-10" type="button" data-mdb-toggle="collapse"
              data-mdb-target="#api-two" data-mdb-collapse-init>
              <div class="row w-100 row-gap-2 align-items-center">
                <div class="col-5 col-md-2 col-lg-1">
                  <span class="w-100 fs-6 badge bg-opacity-75 text-bg-warning">PUT</span>
                </div>
                <div class="col-7 col-md-3 col-lg-2"><span class="fw-bold">/lessons/rate/</span></div>
                <div class="col-12 col-md-7 col-lg-8"><span>Rate a lesson</span></div>
              </div>
            </button>
          </h2>
          <div id="api-two" class="accordion-collapse collapse" data-mdb-parent="#lesson-api-two">
            <div class="accordion-body">
              <pre class="code">async function rateLesson() {
  const response = await fetch("API_URL/lessons/rate", {
    method: "PUT",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({
      lessonId: "12as1541sa",
      rating: 5,
    }),
  });
  return await response.json();
}</pre>
            </div>
          </div>
        </div>
      </div>

    </div>

    <div class="mb-5">
      <h3 class="fw-bold mb-0">Orders</h3>
      <hr>

      <div class="accordion mb-2" id="orders-api-one">
        <div class="accordion-item border-success border">
          <h2 class="accordion-header">
            <button class="accordion-button bg-success bg-opacity-10" type="button" data-mdb-toggle="collapse"
              data-mdb-target="#api-three" data-mdb-collapse-init>
              <div class="row w-100 row-gap-2 align-items-center">
                <div class="col-5 col-md-2 col-lg-1">
                  <span class="w-100 fs-6 badge bg-opacity-75 text-bg-success">POST</span>
                </div>
                <div class="col-7 col-md-3 col-lg-2"><span class="fw-bold">/order/new/</span></div>
                <div class="col-12 col-md-7 col-lg-8"><span>Create a new order</span></div>
              </div>
            </button>
          </h2>
          <div id="api-three" class="accordion-collapse collapse" data-mdb-parent="#orders-api-one">
            <div class="accordion-body">
              <pre class="code">async function submitOrder() {
  const response = await fetch("API_URL/order/new", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({
      username: "amaan",
      phone: 123456,
      booked_lessons: [
        {
          _id: "as461as86d41",
          quantity: 1,
          total: 100,
        },
      ],
      total_price: 100,
    }),
  });
  return await response.json();
}</pre>
            </div>
          </div>
        </div>
      </div>

      <div class="accordion mb-2" id="orders-api-two">
        <div class="accordion-item border-success border">
          <h2 class="accordion-header">
            <button class="accordion-button bg-success bg-opacity-10" type="button" data-mdb-toggle="collapse"
              data-mdb-target="#api-four" data-mdb-collapse-init>
              <div class="row w-100 row-gap-2 align-items-center">
                <div class="col-5 col-md-2 col-lg-1">
                  <span class="w-100 fs-6 badge bg-opacity-75 text-bg-success">POST</span>
                </div>
                <div class="col-7 col-md-3 col-lg-2"><span class="fw-bold">/order/myorders/</span></div>
                <div class="col-12 col-md-7 col-lg-8"><span>Get user's order history</span></div>
              </div>
            </button>
          </h2>
          <div id="api-four" class="accordion-collapse collapse" data-mdb-parent="#orders-api-two">
            <div class="accordion-body">
              <pre class="code">async function getOrders() {
  const response = await fetch("API_URL/order/myorders", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({
      search: "",
    }),
  });
  return await response.json();
}</pre>
            </div>
          </div>
        </div>
      </div>

    </div>
  </div>

  <div class="container pt-5 my-5">
    <h2 class="fw-bolder">Administration</h2>
    <p class="mb-4">These actions are password protected.</p>

    <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3">
      <div class="col">
        <form action="/lessons/updateLessonSpaces" method="post"
          class="bg-primary bg-opacity-10 border-primary border p-5 rounded-7 text-center">
          <h5 class="fw-semibold">Update lesson spaces</h5>
          <div class="my-3">
            <select class="listOfLessons" name="lessonId" id="lessonId" data-mdb-select-init data-mdb-size="lg"
              data-mdb-filter="true">
              <option value="">All</option>
            </select>
            <label class="form-label select-label" for="lessonId">Lesson</label>
          </div>
          <div class="form-outline my-3" data-mdb-input-init>
            <input type="number" name="spaces" value="5" id="spaces" class="form-control form-control-lg" />
            <label class="form-label" for="spaces">Spaces</label>
          </div>
          <button type="submit" class="btn btn-lg w-100 btn-primary">Update</button>
        </form>
      </div>

      <div class="col">
        <form action="/lessons/new" method="post"
          class="bg-success bg-opacity-10 border-success border p-5 rounded-7 text-center">
          <h5 class="fw-semibold">Add new lesson</h5>
          <div class="d-flex flex-column gap-3 my-3">
            <div class="form-outline" data-mdb-input-init>
              <input type="text" name="subject" id="subject" class="form-control form-control-lg" required />
              <label class="form-label" for="subject">Subject</label>
            </div>

            <div class="form-outline" data-mdb-input-init>
              <input type="text" name="location" id="location" class="form-control form-control-lg" required />
              <label class="form-label" for="location">Location</label>
            </div>

            <div class="form-outline" data-mdb-input-init>
              <input type="number" name="price" id="price" class="form-control form-control-lg" required />
              <label class="form-label" for="price">Price</label>
            </div>

            <div class="form-outline" data-mdb-input-init>
              <input type="number" name="spaces" value="5" id="spaces" class="form-control form-control-lg" required />
              <label class="form-label" for="spaces">Spaces</label>
            </div>

            <div class="form-outline" data-mdb-input-init>
              <i class="fa-duotone fa-exclamation-circle trailing text-primary"></i>
              <input type="text" name="icon" id="icon" value="fa-" class="form-control form-control-lg" required />
              <label class="form-label" for="icon">Icon</label>
            </div>

            <div>
              <select name="color" id="color" data-mdb-select-init data-mdb-size="lg">
                <% const colors=['primary','danger', 'success' ,'secondary','warning','info','light','dark'] %>
                  <% colors.forEach(color=> { %>
                    <option value="<%= color %>">
                      <%= color.charAt(0).toUpperCase() + color.slice(1) %>
                    </option>
                    <% }) %>
              </select>
              <label class="form-label select-label" for="color">Color</label>
            </div>
          </div>
          <button type="submit" class="btn btn-lg w-100 btn-success">Add</button>
        </form>
      </div>

      <div class="col">
        <form id="lessonUpdater" action="/lessons/update/" method="post"
          class="bg-primary bg-opacity-10 border-primary border p-5 rounded-7 text-center">
          <h5 class="fw-semibold">Update a lesson</h5>

          <div class="my-3">
            <select class="listOfLessons" name="_id" id="_id" data-mdb-select-init data-mdb-size="lg"
              data-mdb-filter="true" onchange="updateLessonDetails(this)">
              <option selected disabled>Select...</option>
            </select>
            <label class="form-label select-label" for="_id">Lesson</label>
          </div>

          <div class="d-flex flex-column gap-3 my-3">
            <div class="form-outline" data-mdb-input-init>
              <input type="text" name="subject" id="subject" value="-" class="form-control form-control-lg" required />
              <label class="form-label" for="subject">Subject</label>
            </div>

            <div class="form-outline" data-mdb-input-init>
              <input type="text" name="location" id="location" value="-" class="form-control form-control-lg"
                required />
              <label class="form-label" for="location">Location</label>
            </div>

            <div class="form-outline" data-mdb-input-init>
              <input type="number" name="price" id="price" value="0" class="form-control form-control-lg" required />
              <label class="form-label" for="price">Price</label>
            </div>

            <div class="form-outline" data-mdb-input-init>
              <input type="number" name="spaces" value="5" id="spaces" class="form-control form-control-lg" required />
              <label class="form-label" for="spaces">Spaces</label>
            </div>

            <div class="form-outline" data-mdb-input-init>
              <i class="fa-duotone fa-exclamation-circle trailing text-primary"></i>
              <input type="text" name="icon" id="icon" value="fa-" class="form-control form-control-lg" required />
              <label class="form-label" for="icon">Icon</label>
            </div>

            <div>
              <select name="color" id="color-update" data-mdb-select-init data-mdb-size="lg">
                <% colors.forEach(color=> { %>
                  <option value="<%= color %>">
                    <%= color.charAt(0).toUpperCase() + color.slice(1) %>
                  </option>
                  <% }) %>
              </select>
              <label class="form-label select-label" for="color-update">Color</label>
            </div>
          </div>
          <button type="submit" class="btn btn-lg w-100 btn-primary" disabled>Update</button>
        </form>
      </div>
    </div>
  </div>

  <footer class="py-4">
    <div class="container small d-flex flex-column flex-lg-row justify-content-lg-between gap-2 text-center">
      <% const year=new Date().getFullYear() %>
        <p class="mb-0">&copy <%= year !=2024 ? `2024 - ${year}` : '2024' %> AfterSchool</p>
        <p class="mb-0">Developed by Amaan Al Mir - M00999011</p>
        <a href="mailto:am4013@live.mdx.ac.uk">am4013@live.mdx.ac.uk</a>
    </div>
  </footer>

  <script src="https://bonafideboss.github.io/AfterSchoolFrontend/assets/mdbootstrap.7.1.0/mdb.umd.js"></script>
  <script src="script.js"></script>

  <script>
    getLessons()

    document.querySelectorAll('[name="icon"]').forEach(el => {
      el.addEventListener('input', () => {
        const icon = el.value
        const iconEl = el.parentNode.querySelector('i')
        const classes = iconEl.className.split(" ").filter(c => !c.startsWith('fa-'));
        classes.push('fa-duotone', icon)
        iconEl.className = classes.join(" ").trim();
      })
    })

    document.querySelectorAll('[name="color"]').forEach(el => {
      el.addEventListener('change', () => {
        const iconColor = el.value
        const iconEl = el.parentElement.parentElement.previousElementSibling.querySelector('i')
        const classes = iconEl.className.split(" ").filter(c => !c.startsWith('text-'));
        classes.push(`text-${iconColor}`)
        iconEl.className = classes.join(" ").trim();
      })
    })

    function updateLessonDetails(id) {
      const form = document.querySelector('#lessonUpdater')
      form.querySelector('[type="submit"]').removeAttribute('disabled')
      const lessonId = id.value
      var lesson = lessons.filter(lesson => lesson._id === lessonId)
      if (lesson.length > 0) {
        lesson = lesson[0]
        for (const field in lesson) {
          var formField = form.querySelector(`[name="${field}"]`)
          if (formField) {
            formField.value = lesson[field]
          }
        }
      }
    }
  </script>

  <script type="module">

    import { codeToHtml } from "https://esm.sh/shiki@1.4.0";

    document.querySelectorAll(".code").forEach((el) => {
      el.textContent = el.textContent.replace(
        "API_URL",
        `https://${location.hostname}`
      );
      codeToHtml(el.innerHTML, {
        lang: "js",
        theme: "github-dark",
      }).then((highlightedCode) => {
        const codeBlock = document.createElement("div");
        codeBlock.classList.add("code");
        codeBlock.innerHTML = highlightedCode;
        codeBlock.querySelector("pre").classList.add("p-4", "rounded-7");
        el.parentElement.replaceChild(codeBlock, el);
      });
    });
  </script>

  <% systemMessages.forEach(message=> { %>
    <script>notify("<%= message.message %>", color = "<%= message.color %>")</script>
    <% }) %>
</body>

</html>